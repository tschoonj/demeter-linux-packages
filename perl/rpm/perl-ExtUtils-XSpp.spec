Name:           perl-ExtUtils-XSpp
Version:        0.18
Release:        1%{?dist}
Summary:        XS for C++
License:        GPL+ or Artistic
Group:          Development/Libraries
URL:            http://search.cpan.org/dist/ExtUtils-XSpp/
Source0:        http://www.cpan.org/authors/id/S/SM/SMUELLER/ExtUtils-XSpp-%{version}.tar.gz
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root-%(%{__id_u} -n)
BuildArch:      noarch
BuildRequires:  perl >= 1:v5.6.1
BuildRequires:  perl(Digest::MD5) >= 2.0
BuildRequires:  perl(ExtUtils::ParseXS) >= 3.07
BuildRequires:  perl(ExtUtils::Typemaps) >= 1
BuildRequires:  perl(Module::Build)
BuildRequires:  perl(Test::Base)
BuildRequires:  perl(Test::Differences)
Requires:       perl(Digest::MD5) >= 2.0
Requires:       perl(ExtUtils::ParseXS) >= 3.07
Requires:       perl(ExtUtils::Typemaps) >= 1
Requires:       perl(:MODULE_COMPAT_%(eval "`%{__perl} -V:version`"; echo $version))

%description
Anything that does not look like a XS++ directive or a class declaration is
passed verbatim to XS. If you want XS++ to ignore code that looks like a
XS++ directive or class declaration, simply surround it with a raw block
delimiter like this:

%prep
%setup -q -n ExtUtils-XSpp-%{version}

%build
%{__perl} Build.PL installdirs=vendor optimize="$RPM_OPT_FLAGS"
./Build

%install
rm -rf $RPM_BUILD_ROOT

./Build install destdir=$RPM_BUILD_ROOT create_packlist=0
find $RPM_BUILD_ROOT -type f -name '*.bs' -size 0 -exec rm -f {} \;
find $RPM_BUILD_ROOT -depth -type d -exec rmdir {} 2>/dev/null \;

%{_fixperms} $RPM_BUILD_ROOT/*

%check
./Build test

%clean
rm -rf $RPM_BUILD_ROOT

%files
%defattr(-,root,root,-)
%doc Changes examples META.json README scripts XSP.yp
%{perl_vendorlib}/
%{_mandir}/man3/*
%{_mandir}/man1/*
%{_bindir}/xspp

%changelog
* Thu Apr 06 2017 Tom Schoonjans 0.18-1
- Specfile autogenerated by cpanspec 1.78.
